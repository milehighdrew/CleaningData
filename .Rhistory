install.packages("SmoothKern")
library(KernSmooth)
getwd
getwd(0)
getwd()
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z *2 + 100
my_sqrt <- sqrt(z -1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1:4) + c(0,10)
c(1,2,3,4) + c(0,10)
c(1,23,3,4) + c(0,10,100)
c (1,2,3,4) + c(0,10, 100)
z *2 + 1000
my_div
data(mtcars)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
m <- matrix(c(0, 2, 1, 0), nrow = 2, ncol = 2, byrow = TRUE)
m
solve(m)
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setInv <- function(solve) inv <<- solve
getInv <- function() inv
list(set = set, get = get,
setInv = setInv,
getInv = getInv)
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <-x$getInv()
if (!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data)
x$setInv(inv)
inv
}
a <- cacheSolve(m)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
y1 <- c(1:10)
cachemean(y1)
is.recursive(cachemean())
is.recursive(cachemean(y1))
a <- makeVector(y1)
b <- cachemean(a)
b <- cachemean(a)
m1 <- makeCacheMatrix(m)
m2 <- cacheSolve(m1)
m2
m
m2 <- cacheSolve(m1)
set.seed(1)
rpois(5,2)
str(ppois)
?ppois
?dpois
?qpois
?rpois
?pbinom
library(XML)
xmlUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(xmlUrl,useInternal=TRUE)
xmlUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(xmlUrl,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xpathSApply(rootNode,"//zipCode",xmlValue)
xpathSApply(rootNode,"//zipCode=21231",xmlValue)
xpathSApply(rootNode,"//zipCode[=21231"],xmlValue)
xpathSApply(rootNode,"//zipCode[=21231],xmlValue)
xpathSApply(rootNode,"//zipCodez[zipCode="21231"]",xmlValue)
xpathSApply(rootNode,"//zipCode[zipCode="21231"]",xmlValue)
xpathSApply(rootNode,"//zipCode[zipCode=21231]",xmlValue)
zipCodes <- xpathSApply(rootNode,"//zipCode[zipCode=21231]",xmlValue)
zipCodes <- xpathSApply(rootNode,"//zipcode[zipcode=21231]",xmlValue)
zipCodes <- xpathSApply(rootNode,//zipcode[zipcode=21231],xmlValue)
zipCodes <- xpathSApply(rootNode,"//zipcode[zipcode=21231]",xmlValue)
zipCodes <- xpathSApply(rootNode,"//zipcode[zipcode='21231']",xmlValue)
zipCodes <- xpathSApply(rootNode,"//row[zipcode='21231']",xmlValue)
zipCodes <- xpathSApply(rootNode,"//row[zipcode='21231']/zipcode",xmlValue)
count(zipCodes)
count(zipCodes)
library(data.table)
install.packages("data.table")
library(data.table)
tableFile <- fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",sep = ",")
tableFile[,mean(pwgtp15),by=SEX]
sapply(split(tableFile$pwgtp15,tableFile$SEX),mean)
system.time(tableFile[,mean(pwgtp15),by=SEX])
system.time(sapply(split(tableFile$pwgtp15,tableFile$SEX),mean))
system.time(tapply(tableFile$pwgtp15,tableFile$SEX,mean))
system.time(mean(tableFile$pwgtp15,by=tableFile$SEX))
mean(tableFile$pwgtp15,by=tableFile$SEX)
system.time(rowMeans(tableFile)[tableFile$SEX==1];rowMeans(tableFile)[tableFile$SEX==2])
rowMeans(tableFile)[tableFile$SEX==1]
rowMeans(tableFile)[tableFile$SEX==1];rowMeans(tableFile)[tableFile$SEX==2]
mean(tableFile[tableFile$SEX==1,]$pwgtp15)
mean(tableFile[tableFile$SEX==1,]$pwgtp15);mean(tableFile[tableFile$SEX==2,]$pwgtp15)
system.time(mean(tableFile[tableFile$SEX==1,]$pwgtp15);mean(tableFile[tableFile$SEX==2,]$pwgtp15))
system.time(mean(tableFile[tableFile$SEX==1,]$pwgtp15))
mean(tableFile$pwgtp15,by=tableFile$SEX)
system.time(tableFile[,mean(pwgtp15),by=SEX])
mean(tableFile[tableFile$SEX==1,]$pwgtp15);mean(tableFile[tableFile$SEX==2,]$pwgtp15)
system.time(mean(tableFile[tableFile$SEX==1,]$pwgtp15);mean(tableFile[tableFile$SEX==2,]$pwgtp15))
install.packages("RMySQL")
install.packages("httpuv")
install.packages(c("crayon", "curl", "digest", "jsonlite", "mgcv", "mime", "R6", "rJava", "stringi", "testthat"))
install.packages(c("digest", "rJava"))
install.packages("rJava")
install.packages("httpuv")
install.packages("rJava")
install.packages("rJava")
install.packages(c("httr", "memoise", "mgcv", "RMySQL"))
install.packages("RMySQL")
# open test set files
setwd("~/Data Classes/cleanupData")
library(dplyr)
xtest <- read.table("test/X_test.txt",sep = "")
ytest <- read.table("test/y_test.txt",sep = "")
subjectTest <- read.table("test/subject_test.txt",sep = "")
colnames(ytest) <- c("activityid")
colnames(subjectTest) <- c("subjectid")
testInfo <- cbind(subjectTest,ytest)
completeXTest <- cbind(testInfo,xtest)
View(completeXTest)
# open training set
xtrain <- read.table("train/X_train.txt",sep = "")
ytrain <- read.table("train/y_train.txt",sep = "")
subjectTrain <- read.table("train/subject_train.txt",sep = "")
colnames(ytrain) <- c("activityid")
colnames(subjectTrain) <- c("subjectid")
trainInfo <- cbind(subjectTrain,ytrain)
completeXTrain <- cbind(trainInfo,xtrain)
# merge test and train
mergedData <- merge(completeXTrain,completeXTest,by.x = "subjectid",by.y = "subjectid",all=FALSE)
mergedData <- rbind(completeXTrain,completeXTest)
View(mergedData)
featuresLabels <- read.table("test/features.txt",sep = "")
View(featuresLabels)
activityLabels <- read.table("test/activity_labels.txt",sep="")
View(activityLabels)
stdFeaturesLables <- featuresLabels[grepl("std",featuresLabels$V2),]
View(stdFeaturesLables)
stdFeaturesLables <- featuresLabels[grepl("std" || "mean",featuresLabels$V2),]
stdFeaturesLables <- featuresLabels[grepl([std][mean],featuresLabels$V2),]
stdFeaturesLables <- featuresLabels[grepl("[std][mean]",featuresLabels$V2),]
View(stdFeaturesLables)
stdFeaturesLables <- featuresLabels[grepl("[std] || [mean]",featuresLabels$V2),]
View(stdFeaturesLables)
stdFeaturesLables <- featuresLabels[grepl("std | mean",featuresLabels$V2),]
stdFeaturesLables <- featuresLabels[grepl(std | mean,featuresLabels$V2),]
stdFeaturesLables <- featuresLabels[grepl("std|mean",featuresLabels$V2),]
View(stdFeaturesLables)
View(stdFeaturesLables)
filterData <-  mergedData[c(stdFeaturesLables$V2)]
View(filterData)
View(stdFeaturesLables)
filterData <-  mergedData[c(stdFeaturesLables$V1)]
View(filterData)
View(stdFeaturesLables)
View(stdFeaturesLables)
View(stdFeaturesLables)
View(featuresLabels)
View(featuresLabels)
stdFeaturesLabels <- featuresLabels[grepl("std|mean",featuresLabels$V2),]
View(stdFeaturesLabels)
View(mergedData)
View(activityLabels)
stdFeaturesLabels <- featuresLabels[grepl("std|mean",featuresLabels$V2),]
filterData <-  mergedData[c(stdFeaturesLabels$V1)]
Column.with.names <‐ activityLabels[Column.with.numbers]
View(activityLabels)
filterData$activityid <‐ activityLabels[activityLabels$V1]
filterData$activityid <- activityLabels[activityLabels$V1]
View(filterData)
filterData$activityid <- activityLabels[filterData$activityid]
activityLabels$V2<- filterData$activityid[activityLabels$V1]
View(filterData)
View(activityLabels)
activityLabels <- read.table("test/activity_labels.txt",sep="")
View(activityLabels)
filterData$activityid <- filterData$activityid[activityLabels$V1]
View(activityLabels)
View(filterData)
filterData$activityid <- activityLabels$V2[activityLabels$V1]
View(activityLabels)
filterData$activityid <- activityLabels[activityLabels$V1]
filterData$activityid <- activityLabels[filterData$activityid]
filterData = join(filterData,activityLabels,by='activitid')
library(plyr)
filterData = join(filterData,activityLabels,by='activitid')
filterData = join(filterData,activityLabels,by='V1')
filterData <-  mergedData[c(stdFeaturesLabels$V1)]
activity <- c(1=Walking,2=running)
activityLookup = data.frame(
activityid=c(1,2,3,4,5,6),
description=c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING"))
View(activityLookup)
filterData$activityid <- activityLookup[description]
filterData$activityid <- activityLookup$activityid[activityLookup$description]
filterData = join(filterData,activityLookup,by='activityid')
View(filterData)
colnames(activityLabels) <- c("activityid","activitydescription")
View(activityLabels)
filterData <-  mergedData[c(stdFeaturesLabels$V1)]
filterData = join(filterData,activityLabels,by='activityid')
View(filterData)
View(featuresLabels)
filterData <-  mergedData[c("V"+stdFeaturesLabels$V1)]
paste("V" + featuresLabels$V1)
featuresLabels$V1 <-  paste("V" + featuresLabels$V1)
sapply(paste("V" + featuresLabels$V1))
featuresLabels <- mutate(featuresLabels,flabels= "V" + V1)
featuresLabels <- mutate(featuresLabels,flabels= paste("V" + V1))
featuresLabels$V1 <- as.character(featuresLabels$V1)
featuresLabels <- mutate(featuresLabels,flabels= paste("V" + V1))
paste("V" + 1)
paste("v" + "a")
library(stringr)
paste("v" + "a")
paste("v","a")
featuresLabels <- mutate(featuresLabels,flabels= paste("V",V1))
View(featuresLabels)
featuresLabels <- mutate(featuresLabels,flabels= paste("V",V1,sep=""))
View(featuresLabels)
featuresLabels <- read.table("test/features.txt",sep = "")
featuresLabels <- mutate(featuresLabels,flabels= paste("V",V1,sep=""))
View(featuresLabels)
stdFeaturesLabels <- featuresLabels[grepl("std|mean",featuresLabels$V2),]
View(stdFeaturesLabels)
filterData <-  mergedData[c(stdFeaturesLabels$flabels)]
View(filterData)
View(stdFeaturesLabels)
mergedData = join(mergedData,activityLabels,by='activityid')
View(mergedData)
filterData <-  mergedData[c(stdFeaturesLabels$flabels)]
View(filterData)
activityData <- mergedData[c("subjectid","activitydescription"),]
View(activityData)
View(mergedData)
activityData <- cbind(mergedData$subjectid,mergedData$activitydescription)
View(activityData)
mergedData <- rbind(completeXTrain,completeXTest)
activityData <- cbind(mergedData$subjectid,mergedData$activityid)
View(activityData)
activityData <- mergedData[c(mergedData$subjectid)]
View(activityData)
activityData <- cbind(mergedData$subjectid,mergedData$activityid)
activityData <- as.data.frame(activityData)
View(activityData)
mergedData = join(mergedData,activityLabels,by='activityid')
activityData <- cbind(mergedData$subjectid,mergedData$activityid,mergedData$activitydescription)
View(activityData)
activityData <- cbind(mergedData$subjectid,mergedData$activityid)
activityData <- as.data.frame(activityData)
colnames(activityData) <- c("subjectid","activityid")
View(activityData)
View(mergedData)
activityData = join(activityData,activityLabels,by='activityid')
View(activityData)
filterData <-  mergedData[c(stdFeaturesLabels$flabels)]
activityDate2 <- cbind.data.frame(activityData$subjectid,activityData$activitydescription)
View(activityDate2)
colnames(filterData) <_ c(stdFeaturesLabels$V2)
colnames(filterData) <- c(stdFeaturesLabels$V2)
View(filterData)
colnames(filterData) <- c(stdFeaturesLabels$V1)
View(filterData)
colnames(filterData) <- c(stdFeaturesLabels$V2)
View(filterData)
filterData <-  mergedData[c(stdFeaturesLabels$flabels)]
View(filterData)
stdFeaturesLabels$V2 <- gsub("_()","",stdFeaturesLabels$V2)
View(stdFeaturesLabels)
stdFeaturesLabels$V2 <- gsub("_","",stdFeaturesLabels$V2)
View(stdFeaturesLabels)
stdFeaturesLabels <- featuresLabels[grepl("std|mean",featuresLabels$V2),]
View(stdFeaturesLabels)
stdFeaturesLabels$V2 <- gsub("()","",stdFeaturesLabels$V2)
View(stdFeaturesLabels)
gsub("()","",stdFeaturesLabels$V2)
gsub("( )","",stdFeaturesLabels$V2)
gsub("(","",stdFeaturesLabels$V2)
gsub("-","",stdFeaturesLabels$V2)
gsub("()-","",stdFeaturesLabels$V2)
gsub("()","",stdFeaturesLabels$V2)
gsub(")","",stdFeaturesLabels$V2)
stdFeaturesLabels$V2 <- gsub(")","",stdFeaturesLabels$V2)
View(stdFeaturesLabels)
stdFeaturesLabels$V2 <- gsub("(","",stdFeaturesLabels$V2)
stdFeaturesLabels$V2 <- gsub("\\(","",stdFeaturesLabels$V2)
View(stdFeaturesLabels)
stdFeaturesLabels$V2 <- gsub("-","",stdFeaturesLabels$V2)
View(stdFeaturesLabels)
View(filterData)
colnames(filterData) <- c(stdFeaturesLabels$V2)
View(filterData)
activityData2 <- cbind.data.frame(activityData$subjectid,activityData$activitydescription)
colnames(activityData2) <- c("subjectid","activitydescription")
View(activityData2)
finalData <- cbind.data.frame(activityData2,filterData)
View(finalData)
finalDataSummary <- group_by(finalData,finalData$subjectid,finalData$activitydescription)
finalDataSummary <- group_by(finalData,finalData$subjectid)
finalDataSummary <- group_by(finalData,subjectid)
View(finalDataSummary)
finalDataSummary <- group_by(finalData,subjectid,activitydescription)
View(finalDataSummary)
summarize(finalDataSummary)
finalData3 <- summarize(finalDataSummary)
finalData3 <- summarize(finalDataSummary,tBodyAccmeanX)
View(finalData3)
finalDataSummary <- group_by(finalData,activitydescription)
View(finalDataSummary)
summarize(finalDataSummary, mp25 = mean(finalDataSummary$tBodyAccmeanX))
summarize_each(finalDataSummary)
summarize_each(finalDataSummary,mean())
mean1 <- summarise_each(finalDataSummary,funs(mean),matches("mean"))
View(mean1)
mean1 <- summarise_each(finalDataSummary,funs(mean))
finalDataSummary <- group_by(finalData,subjectid,activitydescription)
mean1 <- summarise_each(finalDataSummary,funs(mean))
View(mean1)
meanSummary <- summarise_each(finalDataSummary,funs(mean))
View(meanSummary)
write.table(meanSummary,file="meanSummary.txt",row.names = FALSE)
codebook(meanSummary)
library codebook
install.packages("codebook")
install.packages("memisc")
library(memisc)
codebook(meanSummary)
descripton(meanSummary)
description(meanSummary)
codebook(meanSummary)
